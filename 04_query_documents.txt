查询所有的documents
db.[collectionname].find()            //返回所有documents
db.[collectionname].find().pretty()   //返回所有documents，并且将每个document展开显示，方便观察field  
查询第一条document
db.[collectionname].findOne()         //返回所查documents中的第一条
根据查询条件，匹配查询
db.[collectionname].find(
    {
        "key1":"value"
    }
)
//查询所有key1的值匹配value的documents
根据查询条件，范围查询
db.[collectionname].find(
    {
        "key1":{
            $gt:xx,             //$gt, great than,大于
            $gte:xxx,           //$gte, great than an equal to, 大于等于
            $lt:xx,             //$lt, less than, 小于
            $lte:www,           //$lte, less than an equal to, 小于等于
            $ne:sss             //$ne, not equal to, 不等于
        }
    }
)

//And查询
db.[collectionname].find(
    {
        "key1":"value1",
        "key2":"value2"
    }
)
//查询满足key1匹配value1，并且key2匹配value2的documents

//Or查询
db.[collectionname].find(
    $or:[
        {
            "key1:"value1"
        },
        {
            "key2":"value2"
        }
    ]
)
//查询满足key1匹配value1，或者key2匹配value2的documents

//And与Or联合查询
db.[collectionname].find(
    "key1" : "value1",
    $or:[
        {
            "key2" : "value2"
        },
        {
            "key3" : "value3"
        }
    ]
)
//查询满足key1匹配value1，并且满足key2匹配value2或者key3匹配value3的documents

//查询documents之中，指定的一些fields，指定projection
db.[collectionname].find({query},{projection})

db.[collectionname].find({},
    {
        "key1":false,
        "key2":true,
        "key3":true,
    })
//查询结果中，只含有key2和key3两个field

//limit(n)，用于限制查询结果的个数，如果查询出5个documents，而limit(3)的意思是，只返回前三条结果
db.[collectionname].find([query],[projection]).limit(n)  //限制返回n条

//skip(m)，用于指定查询结果中，跳过的documents的个数，如果查询出5个documents，而skip(2)的意思是，跳过前2个，返回后面的结果
db.[collectionname].find([query],[projection]).skip(m)  //跳过m条
db.[collectionname].find([query],[projection]).skip(m).limit(n)   //跳过m条后，返回n条结果
//注意skip(m)和limit(n)两个方法的优先级是相同的，即.skip(m).limit(n)和.limit(n).skip(m)是相同的
//如果查到了5个documents,则.limit(3).skip(1)的含义，依然是先跳过一条，再限制返回3条，最终返回的结果依然是2，3，4条。

//sort({"key1",1})，用于对查询的documents做某种排序
db.[collectionname].find([query],[projection]).sort({"key1":1})   //根据key1，排序